var search_data = {"index":{"searchIndex":["dodo","container","context","distribution","dodoexception","moment","progressbar","progresscounter","progresslogger","runner","window","windowdurationexceeded","+()","<<()","<<()","also()","also_use()","call()","consume()","crammed()","crammed()","current=()","current=()","daemonise?()","live?()","new()","new()","new()","new()","new()","new()","new()","new()","next()","over()","over()","please()","push()","repeat()","repeat_simultaneously()","run()","scheduler()","scheduler()","setup()","simultaneously()","to_proc()","to_s()","total=()","unused_duration()","use()","readme"],"longSearchIndex":["dodo","dodo::container","dodo::context","dodo::distribution","dodo::dodoexception","dodo::moment","dodo::progressbar","dodo::progresscounter","dodo::progresslogger","dodo::runner","dodo::window","dodo::windowdurationexceeded","dodo::progresscounter#+()","dodo::container#<<()","dodo::window#<<()","dodo::container#also()","dodo::container#also_use()","dodo::runner#call()","dodo::distribution#consume()","dodo::container#crammed()","dodo::moment#crammed()","dodo::progressbar#current=()","dodo::progresslogger#current=()","dodo::runner#daemonise?()","dodo::runner#live?()","dodo::container::new()","dodo::context::new()","dodo::distribution::new()","dodo::moment::new()","dodo::progressbar::new()","dodo::progresslogger::new()","dodo::runner::new()","dodo::window::new()","dodo::distribution#next()","dodo::over()","dodo::window#over()","dodo::window#please()","dodo::context#push()","dodo::window#repeat()","dodo::window#repeat_simultaneously()","dodo::run()","dodo::container#scheduler()","dodo::moment#scheduler()","dodo::progresscounter#setup()","dodo::window#simultaneously()","dodo::moment#to_proc()","dodo::progresscounter#to_s()","dodo::progressbar#total=()","dodo::window#unused_duration()","dodo::window#use()",""],"info":[["Dodo","","Dodo.html","",""],["Dodo::Container","","Dodo/Container.html","",""],["Dodo::Context","","Dodo/Context.html","",""],["Dodo::Distribution","","Dodo/Distribution.html","",""],["Dodo::DodoException","","Dodo/DodoException.html","",""],["Dodo::Moment","","Dodo/Moment.html","",""],["Dodo::ProgressBar","","Dodo/ProgressBar.html","",""],["Dodo::ProgressCounter","","Dodo/ProgressCounter.html","",""],["Dodo::ProgressLogger","","Dodo/ProgressLogger.html","",""],["Dodo::Runner","","Dodo/Runner.html","",""],["Dodo::Window","","Dodo/Window.html","",""],["Dodo::WindowDurationExceeded","","Dodo/WindowDurationExceeded.html","",""],["+","Dodo::ProgressCounter","Dodo/ProgressCounter.html#method-i-2B","(other)",""],["<<","Dodo::Container","Dodo/Container.html#method-i-3C-3C","(offset_window)",""],["<<","Dodo::Window","Dodo/Window.html#method-i-3C-3C","(happening)",""],["also","Dodo::Container","Dodo/Container.html#method-i-also","(after:, over:, &block)",""],["also_use","Dodo::Container","Dodo/Container.html#method-i-also_use","(window, after:)",""],["call","Dodo::Runner","Dodo/Runner.html#method-i-call","()",""],["consume","Dodo::Distribution","Dodo/Distribution.html#method-i-consume","(duration)",""],["crammed","Dodo::Container","Dodo/Container.html#method-i-crammed","(*)",""],["crammed","Dodo::Moment","Dodo/Moment.html#method-i-crammed","(factor:)",""],["current=","Dodo::ProgressBar","Dodo/ProgressBar.html#method-i-current-3D","(value)",""],["current=","Dodo::ProgressLogger","Dodo/ProgressLogger.html#method-i-current-3D","(value)",""],["daemonise?","Dodo::Runner","Dodo/Runner.html#method-i-daemonise-3F","()",""],["live?","Dodo::Runner","Dodo/Runner.html#method-i-live-3F","()",""],["new","Dodo::Container","Dodo/Container.html#method-c-new","()",""],["new","Dodo::Context","Dodo/Context.html#method-c-new","(parent = nil)",""],["new","Dodo::Distribution","Dodo/Distribution.html#method-c-new","(start, interval = 0, count = 1, stretch: 1)",""],["new","Dodo::Moment","Dodo/Moment.html#method-c-new","(&block)",""],["new","Dodo::ProgressBar","Dodo/ProgressBar.html#method-c-new","(opts = {})",""],["new","Dodo::ProgressLogger","Dodo/ProgressLogger.html#method-c-new","(logger, total: nil, prefix: nil)",""],["new","Dodo::Runner","Dodo/Runner.html#method-c-new","(enumerable, opts = {})",""],["new","Dodo::Window","Dodo/Window.html#method-c-new","(duration, parent = nil, &block)",""],["next","Dodo::Distribution","Dodo/Distribution.html#method-i-next","()",""],["over","Dodo","Dodo.html#method-c-over","(duration, &block)",""],["over","Dodo::Window","Dodo/Window.html#method-i-over","(duration, &block)",""],["please","Dodo::Window","Dodo/Window.html#method-i-please","(&block)",""],["push","Dodo::Context","Dodo/Context.html#method-i-push","()",""],["repeat","Dodo::Window","Dodo/Window.html#method-i-repeat","(times:, over: unused_duration, &block)",""],["repeat_simultaneously","Dodo::Window","Dodo/Window.html#method-i-repeat_simultaneously","(times:, over: &block)",""],["run","Dodo","Dodo.html#method-c-run","( window, starting:, context: Context.new, progress: ProgressLogger.new(Logger.new(STDOUT)), **opts )",""],["scheduler","Dodo::Container","Dodo/Container.html#method-i-scheduler","(distribution, context, opts = {})",""],["scheduler","Dodo::Moment","Dodo/Moment.html#method-i-scheduler","(distribution, context, opts = {})",""],["setup","Dodo::ProgressCounter","Dodo/ProgressCounter.html#method-i-setup","(total: nil, prefix: nil)",""],["simultaneously","Dodo::Window","Dodo/Window.html#method-i-simultaneously","(over:, &block)",""],["to_proc","Dodo::Moment","Dodo/Moment.html#method-i-to_proc","()",""],["to_s","Dodo::ProgressCounter","Dodo/ProgressCounter.html#method-i-to_s","()",""],["total=","Dodo::ProgressBar","Dodo/ProgressBar.html#method-i-total-3D","(value)",""],["unused_duration","Dodo::Window","Dodo/Window.html#method-i-unused_duration","()",""],["use","Dodo::Window","Dodo/Window.html#method-i-use","(happening)",""],["README","","README_md.html","","<p>Dodo\n<p><img src=\"https://travis-ci.org/TomFinill/dodo.svg?branch=master\"> <img src=\"https://api.codeclimate.com/v1/badges/42198ebf17bf127e0da6/maintainability\"> â€¦\n"]]}}