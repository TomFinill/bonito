var search_data = {"index":{"searchIndex":["dodo","dodoexception","window","windowdurationexceeded","*()","**()","+()","new()","over()","please()","repeat()","simultaneously()","unused_duration()","use()","readme"],"longSearchIndex":["dodo","dodo::dodoexception","dodo::window","dodo::windowdurationexceeded","dodo::window#*()","dodo::window#**()","dodo::window#+()","dodo::window::new()","dodo::window#over()","dodo::window#please()","dodo::window#repeat()","dodo::window#simultaneously()","dodo::window#unused_duration()","dodo::window#use()",""],"info":[["Dodo","","Dodo.html","",""],["Dodo::DodoException","","Dodo/DodoException.html","",""],["Dodo::Window","","Dodo/Window.html","","<p>A Window is a data structure with a duration (measured in seconds) that contains <code>timelines</code>. A <code>timeline</code> …\n"],["Dodo::WindowDurationExceeded","","Dodo/WindowDurationExceeded.html","",""],["*","Dodo::Window","Dodo/Window.html#method-i-2A","(other)","<p>Repeatedly apply the #+ method of the current Window to itself\n<p>@param [Integer] other Denotes the number …\n"],["**","Dodo::Window","Dodo/Window.html#method-i-2A-2A","(other)","<p>Scale up a window by parallelising it according to some factor\n<p>@param [Integer] other An Integer denoting …\n"],["+","Dodo::Window","Dodo/Window.html#method-i-2B","(other)","<p>Combine two Windows into a single, larger Window object.\n<p>@param [Window] other Some other Window object …\n"],["new","Dodo::Window","Dodo/Window.html#method-c-new","(duration, parent = nil, &block)","<p>Instantiate a new Window object\n<p>@param [Integer] duration The total time period (in seconds) that the …\n"],["over","Dodo::Window","Dodo/Window.html#method-i-over","(duration, &block)","<p>Define a new Window and add it as a child to the current Window\n<p>@param [Integer] duration The duration …\n"],["please","Dodo::Window","Dodo/Window.html#method-i-please","(&block)","<p>Define a new Moment and add it as a child to the current Window\n<p>@params [Proc] block A block passed to …\n"],["repeat","Dodo::Window","Dodo/Window.html#method-i-repeat","(times:, over:, &block)","<p>Define a new window and append it multiple times as a child of the current Window object.\n<p>@param [Integer] …\n"],["simultaneously","Dodo::Window","Dodo/Window.html#method-i-simultaneously","(&block)","<p>Define a new Container object append it as a child to the current Window. Also permit the evaluation …\n"],["unused_duration","Dodo::Window","Dodo/Window.html#method-i-unused_duration","()","<p>The the amount of #duration remaining taking into account the duration of any Timeline objects included …\n"],["use","Dodo::Window","Dodo/Window.html#method-i-use","(*timelines)","<p>Append an existing Timeline as a child of the current Window\n<p>@params [Array] timelines An array of Timeline …\n"],["README","","README_md.html","","<p>Dodo\n<p><img src=\"https://travis-ci.org/TomFinill/dodo.svg?branch=master\"> <img src=\"https://api.codeclimate.com/v1/badges/42198ebf17bf127e0da6/maintainability\"> …\n"]]}}